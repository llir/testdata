%swift_error = type { i64, i8 }

define void @f1(i8 zeroext %0) {
1:
	ret void
}

define void @f2(i8 signext %0) {
1:
	ret void
}

define void @f3() noreturn {
0:
	ret void
}

define void @f4(i8 inreg %0) {
1:
	ret void
}

define void @f5(i8* sret(i8) %0) {
1:
	ret void
}

define void @f6() nounwind {
0:
	ret void
}

define void @f7(i8* noalias %0) {
1:
	ret void
}

define void @f8(i8* byval(i8) %0) {
1:
	ret void
}

define void @f9(i8* nest %0) {
1:
	ret void
}

define void @f10() readnone {
0:
	ret void
}

define void @f11() readonly {
0:
	ret void
}

define void @f12() noinline {
0:
	ret void
}

define void @f13() alwaysinline {
0:
	ret void
}

define void @f14() optsize {
0:
	ret void
}

define void @f15() ssp {
0:
	ret void
}

define void @f16() sspreq {
0:
	ret void
}

define void @f17(i8* align 4 %0) {
1:
	ret void
}

define void @f18(i8* nocapture %0) {
1:
	ret void
}

define void @f19() noredzone {
0:
	ret void
}

define void @f20() noimplicitfloat {
0:
	ret void
}

define void @f21() naked {
0:
	ret void
}

define void @f22() inlinehint {
0:
	ret void
}

define void @f23() alignstack(4) {
0:
	ret void
}

define void @f24() returns_twice {
0:
	ret void
}

define void @f25() uwtable {
0:
	ret void
}

define void @f26() nonlazybind {
0:
	ret void
}

define void @f27() sanitize_address {
0:
	ret void
}

define void @f28() sanitize_thread {
0:
	ret void
}

define void @f29() sanitize_memory {
0:
	ret void
}

define void @f30() "cpu"="cortex-a8" {
0:
	ret void
}

define i8 @f31(i8 returned %A) {
0:
	ret i8 %A
}

define void @f32() sspstrong {
0:
	ret void
}

define void @f33() minsize {
0:
	ret void
}

declare void @nobuiltin()

define void @f34() {
0:
	call void @nobuiltin() nobuiltin
	ret void
}

define void @f35() optnone noinline {
0:
	ret void
}

define void @f36(i8* inalloca(i8) %0) {
1:
	ret void
}

define nonnull i8* @f37(i8* nonnull %a) {
0:
	ret i8* %a
}

define void @f38() unnamed_addr jumptable {
0:
	call void bitcast (void (i8*)* @f36 to void ()*)()
	unreachable
}

define dereferenceable(2) i8* @f39(i8* dereferenceable(1) %a) {
0:
	ret i8* %a
}

define dereferenceable(18446744073709551606) i8* @f40(i8* dereferenceable(18446744073709551615) %a) {
0:
	ret i8* %a
}

define void @f41(i8* align 32 %0, double* align 64 %1) {
2:
	ret void
}

define dereferenceable_or_null(8) i8* @f42(i8* dereferenceable_or_null(8) %foo) {
entry:
	ret i8* %foo
}

define void @f43() convergent {
0:
	ret void
}

define void @f44() argmemonly {
0:
	ret void
}

define void @f45(i32 "string_attribute" %0) {
1:
	ret void
}

define void @f46(i32 "string_attribute_with_value"="value" %0) {
1:
	ret void
}

define void @f47() norecurse {
0:
	ret void
}

define void @f48() inaccessiblememonly {
0:
	ret void
}

define void @f49() inaccessiblemem_or_argmemonly {
0:
	ret void
}

define void @f50(i8* swiftself %0) {
1:
	ret void
}

define i32 @f51(i8** swifterror %0) {
1:
	ret i32 0
}

define i32 @f52(i32 %0, i8** swifterror %1) {
2:
	ret i32 0
}

declare float @foo(%swift_error** swifterror %error_ptr_ref)

define float @f53(i8* %error_ref) {
entry:
	%error_ptr_ref = alloca swifterror %swift_error*
	store %swift_error* null, %swift_error** %error_ptr_ref
	%call = call float @foo(%swift_error** swifterror %error_ptr_ref)
	ret float 1.0
}

define i8* @f54(i32 %0) allocsize(0) {
1:
	ret i8* null
}

define i8* @f55(i32 %0, i32 %1) allocsize(0, 1) {
2:
	ret i8* null
}

define void @f56() writeonly {
0:
	ret void
}

define void @f57() speculatable {
0:
	ret void
}

define void @f58() sanitize_hwaddress {
0:
	ret void
}

define void @f59() shadowcallstack {
0:
	ret void
}

define void @f60() willreturn {
0:
	ret void
}

define void @f61() nofree {
0:
	ret void
}

define void @f62() nosync {
0:
	ret void
}

define void @f63() sanitize_memtag {
0:
	ret void
}

define void @f64(i32* preallocated(i32) %a) {
0:
	ret void
}

define void @f65() null_pointer_is_valid {
0:
	ret void
}

define noundef i32 @f66(i32 noundef %a) {
0:
	ret i32 %a
}

define void @f67(i32* byref(i32) %a) {
0:
	ret void
}

define void @f68() mustprogress {
0:
	ret void
}

define void @f69() nocallback {
0:
	ret void
}

define void @f70() cold {
0:
	ret void
}

define void @f71() hot {
0:
	ret void
}

define void @f72() vscale_range(8) {
0:
	ret void
}

define void @f73() vscale_range(1, 8) {
0:
	ret void
}

define void @f74() vscale_range(1, 0) {
0:
	ret void
}

define void @f76(i8* swiftasync %0) {
1:
	ret void
}

define void @f77() nosanitize_coverage {
0:
	ret void
}

define void @f78() noprofile {
0:
	ret void
}

declare void @llvm.some.intrinsic(i32* %0)

define void @f79() {
0:
	call void @llvm.some.intrinsic(i32* elementtype(i32) null)
	ret void
}

define void @f80() disable_sanitizer_instrumentation {
0:
	ret void
}

define void @f81(i8** sret(i8*) %0) {
1:
	ret void
}

define void @f82(i32* %0) {
1:
	call void @llvm.some.intrinsic(i32* sret(i32) %0)
	ret void
}

define void @f83(<4 x i8*> align 32 %0, <vscale x 1 x double*> align 64 %1) {
2:
	ret void
}
